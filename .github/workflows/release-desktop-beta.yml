name: Release Desktop Beta

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build'
        required: true
  push:
    branches:
      - smoothing
      - gemini-thinking

# 确保同一时间只运行一个相同的 workflow，取消正在进行的旧的运行
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

# Add default permissions
permissions: read-all

jobs:
  test:
    name: Code quality check
    # 添加 PR label 触发条件，只有添加了 Build Desktop 标签的 PR 才会触发构建
    runs-on: ubuntu-latest # 只在 ubuntu 上运行一次检查
    steps:
      - name: Checkout base
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Install deps
        run: pnpm install

      - name: Lint
        run: pnpm run lint

  version:
    name: Determine version
    runs-on: ubuntu-latest
    outputs:
      # 输出版本信息，供后续 job 使用
      version: ${{ steps.set_version.outputs.version }}
      is_pr_build: false
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"
      
      # 主要逻辑：确定构建版本号
      - name: Set version
        id: set_version
        run: |
          version=""
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # Workflow dispatch version
            version="${{ github.event.inputs.version }}"
            echo "📦 Workflow Dispatch Input Version: ${version}"
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            # Using first 7 chars of the SHA prefixed with 'dev-'
            version="0.0.0-dev-${{ steps.slug.outputs.sha7 }}"
            echo "📦 Push Event Auto Version: ${version}"
          else
            echo "::error::Unsupported trigger event: ${{ github.event_name }}"
            exit 1
          fi

          if [[ -z "$version" ]]; then
            echo "::error::Version could not be determined."
            exit 1
          fi

          echo "version=${version}" >> $GITHUB_OUTPUT
          # Setting is_pr_build to false
          echo "is_pr_build=false" >> $GITHUB_OUTPUT

      # 输出版本信息总结，方便在 GitHub Actions 界面查看
      - name: Version Summary
        run: |
          echo "🚦 Release Version: ${{ steps.set_version.outputs.version }}"

  build:
    needs: [version, test]
    name: Build Desktop App
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # 暂时先支持 macOS
        os: [macos-latest]
    #        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      # node-linker=hoisted 模式将可以确保 asar 压缩可用
      - name: Install deps
        run: pnpm install --node-linker=hoisted

      - name: Install deps on Desktop
        run: npm run install-isolated --prefix=./apps/desktop

      # 设置 package.json 的版本号
      - name: Set package version
        run: npm run workflow:set-desktop-version ${{ needs.version.outputs.version }} beta

      # macOS 构建处理
      - name: Build artifact on macOS
        if: runner.os == 'macOS'
        run: npm run desktop:build
        env:
          APP_URL: http://localhost:3015
          DATABASE_URL: 'postgresql://postgres@localhost:5432/postgres'
          # 默认添加一个加密 SECRET
          KEY_VAULTS_SECRET: 'oLXWIiR/AKF+rWaqy9lHkrYgzpATbW3CtJp3UfkVgpE='
          CUSTOM_FONT_URL: ${{ secrets.CUSTOM_FONT_URL }}
          CUSTOM_FONT_FAMILY: ${{ secrets.CUSTOM_FONT_FAMILY }}

      # # 非 macOS 平台构建处理
      # - name: Build artifact on other platforms
      #   if: runner.os != 'macOS'
      #   run: npm run desktop:build
      #   env:
      #     APP_URL: http://localhost:3015
      #     DATABASE_URL: 'postgresql://postgres@localhost:5432/postgres'
      #     KEY_VAULTS_SECRET: 'oLXWIiR/AKF+rWaqy9lHkrYgzpATbW3CtJp3UfkVgpE='
      #     CUSTOM_FONT_URL: ${{ secrets.CUSTOM_FONT_URL }}
      #     CUSTOM_FONT_FAMILY: ${{ secrets.CUSTOM_FONT_FAMILY }}

      # 上传构建产物，移除了 zip 相关部分
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}
          path: |
            apps/desktop/release/latest*
            apps/desktop/release/*.dmg*
            apps/desktop/release/*.zip*
            apps/desktop/release/*.exe*
            apps/desktop/release/*.AppImage
          retention-days: 5
